name: Multi-arch Nix2Container CI

on:
  push:
    branches:
      - "nixify/docker-ci"
    tags:
      - "v*"

jobs:
  build-and-push:
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            arch: amd64
            system: x86_64-linux
            tag_suffix: amd64
          - runner: ubuntu-24.04-arm
            arch: arm64
            system: aarch64-linux
            tag_suffix: arm64

    runs-on: ${{ matrix.runner }}
    env:
      IMAGE_MCP: ${{ secrets.DOCKERHUB_NAMESPACE }}/juspay-mcp
      IMAGE_DASHBOARD: ${{ secrets.DOCKERHUB_NAMESPACE }}/juspay-dashboard-mcp

    steps:
      - name: üì¶ Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push all images
        run: |
          # Function to build, tag and push images
          build_and_push() {
            local nix_target="$1"
            local source_tag="$2"
            local target_image="$3"
            local tag_suffix="$4"

            echo "Building and pushing $source_tag -> $target_image:$tag_suffix"
            nix run .#${nix_target}.copyToDockerDaemon --system ${{ matrix.system }}
            docker tag ${source_tag}:latest ${target_image}:${tag_suffix}
            docker push ${target_image}:${tag_suffix}
          }

          # Build and push all images
          build_and_push "docker" "juspay-mcp" "$IMAGE_MCP" "${{ matrix.tag_suffix }}"
          build_and_push "docker-sse" "juspay-mcp-sse" "$IMAGE_MCP" "sse-${{ matrix.tag_suffix }}"
          build_and_push "docker-dashboard" "juspay-dashboard-mcp" "$IMAGE_DASHBOARD" "${{ matrix.tag_suffix }}"
          build_and_push "docker-dashboard-sse" "juspay-dashboard-mcp-sse" "$IMAGE_DASHBOARD" "sse-${{ matrix.tag_suffix }}"

  manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      IMAGE_MCP: ${{ secrets.DOCKERHUB_NAMESPACE }}/juspay-mcp
      IMAGE_DASHBOARD: ${{ secrets.DOCKERHUB_NAMESPACE }}/juspay-dashboard-mcp

    steps:
      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create and push multi-arch manifests
        run: |
          # Function to create and push multi-arch manifest
          create_manifest() {
            local image="$1"
            local tag="$2"
            local amd64_tag="$3"
            local arm64_tag="$4"

            echo "Creating manifest for $image:$tag"
            docker manifest create ${image}:${tag} \
              --amend ${image}:${amd64_tag} \
              --amend ${image}:${arm64_tag}
            docker manifest push ${image}:${tag}
          }

          # Create manifests for all images
          create_manifest "$IMAGE_MCP" "latest" "amd64" "arm64"
          create_manifest "$IMAGE_MCP" "sse-latest" "sse-amd64" "sse-arm64"
          create_manifest "$IMAGE_DASHBOARD" "latest" "amd64" "arm64"
          create_manifest "$IMAGE_DASHBOARD" "sse-latest" "sse-amd64" "sse-arm64"
